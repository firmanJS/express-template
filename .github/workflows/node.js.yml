# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }} && install dependencies
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

  create-env:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} && install dependencies
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create env file
        run: |
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo TZ=${{ secrets.TZ }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env
          echo SENTRY_TRACE_RATE=${{ secrets.SENTRY_TRACE_RATE }} >> .env
          echo CLUSTER_MODE=${{ secrets.CLUSTER_MODE }} >> .env
          echo CC_TEST_REPORTER_ID=${{ secrets.CC_TEST_REPORTER_ID }} >> .env

  coverage:
    needs: [ create-env ]
    name: coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: actions/setup-node@main
      with:
        node-version: ${{ matrix.node-version }}
    - run: sudo npm install -g yarn
    - run: sudo yarn install
    - run: sudo yarn add --dev jest         
    - uses: paambaati/codeclimate-action@v2.7.5
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: yarn test:coverage
